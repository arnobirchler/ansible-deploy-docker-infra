input {
    jdbc {
        jdbc_validate_connection => true
        jdbc_connection_string => "jdbc:oracle:thin:@192.168.88.10:1521:orcl"
        jdbc_user => "candy_admin"
        jdbc_password => "ToorToor1"
        jdbc_driver_library => "/logstash/jars/ojdbc7.jar"
        jdbc_driver_class => "Java::oracle.jdbc.driver.OracleDriver"
        statement => "SELECT
  CANDIES_ORDERS.ID_ORDERS,
  CANDIES_ORDERS.ID_CANDIES,
  CANDIES_ORDERS.QUANTITY,
  CANDIES_TYPES.NAME AS CANDY_TYPE,
  CANDIES_TYPES.MANUFACTURING_COSTS,
  CANDIES_TYPES.PACKAGING_COSTS,
  CANDIES_TYPES.OVERHEADS,
  CANDIES_TYPES.SHIPPING_COSTS,
  COLORS.NAME AS COLOR,
  TEXTURES.NAME AS TEXTURE,
  VARIETIES.NAME AS VARIETY,
  PRICES.PRICE,
  CONTAINERS.NAME AS CONTAINER,
  COMPOSITIONS.QUANTITY AS COMPONENT_QTY,
  COMPONENTS.NAME AS COMPONENT,
  COMPONENTS.PALLET_WEIGHT,
  COMPONENTS.CONDITIONNING,
  MANUFACTURINGS.NAME AS MANUFACTURING,
  MANUFACTURINGS.DELAY,
  MANUFACTURINGS.CADENCE
FROM CANDY_ADMIN.CANDIES_ORDERS
  INNER JOIN CANDY_ADMIN.CANDIES ON CANDIES.ID_CANDIES = CANDIES_ORDERS.ID_CANDIES
  INNER JOIN CANDY_ADMIN.CANDIES_TYPES ON CANDIES_TYPES.ID_CANDIES_TYPES = CANDIES.ID_CANDIES_TYPES
  INNER JOIN CANDY_ADMIN.COLORS ON COLORS.ID_COLORS = CANDIES.ID_COLORS
  INNER JOIN CANDY_ADMIN.TEXTURES ON TEXTURES.ID_TEXTURES = CANDIES.ID_TEXTURES
  INNER JOIN CANDY_ADMIN.VARIETIES ON VARIETIES.ID_VARIETIES = CANDIES.ID_VARIETIES
  INNER JOIN CANDY_ADMIN.PRICES ON PRICES.ID_CANDIES_TYPES = CANDIES.ID_CANDIES_TYPES
  INNER JOIN CANDY_ADMIN.CONTAINERS ON CONTAINERS.ID_CONTAINERS = PRICES.ID_CONTAINERS
  INNER JOIN CANDY_ADMIN.COMPOSITIONS ON COMPOSITIONS.ID_CANDIES_TYPES = CANDIES_TYPES.ID_CANDIES_TYPES
  INNER JOIN CANDY_ADMIN.COMPONENTS ON COMPONENTS.ID_COMPONENTS = COMPOSITIONS.ID_COMPONENTS
  INNER JOIN CANDY_ADMIN.MANUFACTURINGS ON MANUFACTURINGS.ID_VARIETIES = CANDIES.ID_VARIETIES"
        schedule => "*/10 * * * *"
        type => "candies"
        id => "jdbc_candies"
    }
}
filter {
    ruby {
        path => "/usr/share/logstash/pipeline/.concat.rb"
    }
    fingerprint {
        source => "to_fingerprint"
        target => "[fingerprint]"
        method => "SHA256"
        key => "Log analytics"
    }
    mutate {
        remove_field => ["id_orders", "id_candies"]
    }
}
output {
    # stdout { codec => rubydebug }
    mongodb {
        id => "mongo_candies"
        database => "orcl"
        collection => "candies"
        uri => "mongodb://{{mongo_user_admin}}:{{mongo_pass_admin}}@{{mongo_domain}}:27017"
    }
}